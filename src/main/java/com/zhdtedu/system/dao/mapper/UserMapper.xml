<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhdtedu.system.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.zhdtedu.system.dao.entity.User">
    <result column="USER_ID_" jdbcType="INTEGER" property="userId" />
    <result column="USER_NAME_" jdbcType="VARCHAR" property="userName" />
    <result column="TELEPHONE_" jdbcType="VARCHAR" property="telephone" />
    <result column="MAILBOX_" jdbcType="VARCHAR" property="mailbox" />
    <result column="ACCOUNT_" jdbcType="VARCHAR" property="account" />
    <result column="PASSWORD_" jdbcType="VARCHAR" property="password" />
    <result column="USER_STATUS_" jdbcType="INTEGER" property="userStatus" />
    <association property="departments" javaType="com.zhdtedu.system.dao.entity.Department">
      <result column="DEPT_ID_" jdbcType="INTEGER" property="deptId" />
      <result column="DEPT_NAME_" jdbcType="VARCHAR" property="deptName" />
      <result column="PART_ID_" jdbcType="INTEGER" property="partId" />
      <result column="STATUS_" jdbcType="INTEGER" property="status" />
    </association>
    <association property="roles" javaType="com.zhdtedu.system.dao.entity.Role">
      <result column="ROLE_ID_" jdbcType="INTEGER" property="roleId" />
      <result column="ROLE_NAME_" jdbcType="VARCHAR" property="roleName" />
    </association>
<!--    <result column="AVAILABLE_" jdbcType="VARCHAR" property="available" />-->
  </resultMap>
  <resultMap id="BaseMap" type="com.zhdtedu.system.dao.entity.Department">
    <result column="DEPT_ID_" jdbcType="INTEGER" property="deptId" />
    <result column="DEPT_NAME_" jdbcType="VARCHAR" property="deptName" />
    <result column="PART_ID_" jdbcType="INTEGER" property="partId" />
    <result column="STATUS_" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap id="BaseResuMap" type="com.zhdtedu.system.dao.entity.Role">
    <result column="ROLE_ID_" jdbcType="INTEGER" property="roleId" />
    <result column="ROLE_NAME_" jdbcType="VARCHAR" property="roleName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    USER_ID_, USER_NAME_, TELEPHONE_, MAILBOX_, USER_STATUS_
  </sql>
  <select id="selectByExample" parameterType="com.zhdtedu.system.dao.entity.UserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.zhdtedu.system.dao.entity.UserExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    delete from sys_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zhdtedu.system.dao.entity.User"
          useGeneratedKeys="true" keyProperty="userId">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    insert into sys_users (USER_ID_, USER_NAME_, TELEPHONE_, 
      MAILBOX_, ACCOUNT_,PASSWORD_,USER_STATUS_
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, 
      #{mailbox,jdbcType=VARCHAR},  #{account,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR} ,#{userStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zhdtedu.system.dao.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    insert into sys_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID_,
      </if>
      <if test="userName != null">
        USER_NAME_,
      </if>
      <if test="telephone != null">
        TELEPHONE_,
      </if>
      <if test="mailbox != null">
        MAILBOX_,
      </if>

      <if test="userStatus != null">
        USER_STATUS_,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>

      <if test="userStatus != null">
        #{userStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zhdtedu.system.dao.entity.UserExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    select count(*) from sys_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    update sys_users
    <set>
      <if test="record.userId != null">
        USER_ID_ = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        USER_NAME_ = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        TELEPHONE_ = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null">
        MAILBOX_ = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        ACCOUNT_ = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD_ = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userStatus != null">
        USER_STATUS_ = #{record.userStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Jul 17 16:10:47 CST 2019.
    -->
    update sys_users
    set USER_ID_ = #{record.userId,jdbcType=INTEGER},
      USER_NAME_ = #{record.userName,jdbcType=VARCHAR},
      TELEPHONE_ = #{record.telephone,jdbcType=VARCHAR},
      MAILBOX_ = #{record.mailbox,jdbcType=VARCHAR},
      USER_STATUS_ = #{record.userStatus,jdbcType=INTEGER},
    ACCOUNT_=#{record.account,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <!--根据id查询列表 "  parameterType="String"-->
  <select id="selectByExample2" resultMap="BaseResultMap"   >
    select * from sys_users where 1=1
    <if test="deptId != null">
      and USER_ID_ in(select USER_ID_ from sys_user_department
      where 1=1 and DEPT_ID_=#{deptId,jdbcType=INTEGER} )
    </if>

    limit ${(pageNo-1)*pageSize},${pageSize}
  </select>
  <!--查询总记录-->
  <select id="getTotalCount" resultType="int"   >
    select
    count(1) as count
     from sys_users where 1=1
    <if test="deptId != null">
      and USER_ID_ in(select USER_ID_ from sys_user_department
      where 1=1 and DEPT_ID_=#{deptId,jdbcType=INTEGER}
    </if>
    )

  </select>
  <!--根据id查询列表 "  parameterType="String"-->
  <select id="selectByExample3" resultMap="BaseResultMap"   >
    SELECT * FROM sys_users u LEFT OUTER JOIN sys_user_role ur ON u.USER_ID_=ur.USER_ID_
    LEFT OUTER JOIN sys_roles r ON r.ROLE_ID_=ur.ROLE_ID_
    LEFT OUTER JOIN sys_user_department ud ON u.USER_ID_=ud.USER_ID_
    LEFT OUTER JOIN sys_department d ON d.DEPT_ID_=ud.DEPT_ID_ where 1=1
    <if test="userName != null">
      and USER_NAME_ like "%"#{userName}"%"
    </if>
    <if test="roleName != null">
      and r.ROLE_NAME_ like "%"#{roleName}"%"
    </if>
    <if test="deptId != null">
      and d.DEPT_ID_ =#{deptId,jdbcType=INTEGER}
    </if>
    limit ${(pageNo-1)*pageSize},${pageSize}
  </select>
  <!--查询总记录-->
  <select id="getTotalCountBy" resultType="int"   >
    SELECT count(*) FROM sys_users u LEFT OUTER JOIN sys_user_role ur ON u.USER_ID_=ur.USER_ID_
    LEFT OUTER JOIN sys_roles r ON r.ROLE_ID_=ur.ROLE_ID_
    LEFT OUTER JOIN sys_user_department ud ON u.USER_ID_=ud.USER_ID_
    LEFT OUTER JOIN sys_department d ON d.DEPT_ID_=ud.DEPT_ID_ where 1=1
    <if test="userName != null">
      and USER_NAME_ like "%"#{userName}"%"
    </if>
    <if test="roleName != null">
      and r.ROLE_NAME_ like "%"#{roleName}"%"
    </if>
     <if test="deptId != null">
       and d.DEPT_ID_ =#{deptId,jdbcType=INTEGER}
  </if>
  </select>

  <!--删除用户-->
  <delete id="deleteByUser" parameterType="com.zhdtedu.system.dao.entity.User">
  delete from sys_users where USER_ID_ = #{record.userId,jdbcType=INTEGER}
</delete>

  <update id="updateByPrimaryKey" parameterType="com.zhdtedu.system.dao.entity.UserExample" >
  <!--update sys_users
     set  USER_ID_ = #{record.userId,jdbcType=INTEGER},
       USER_NAME_ = #{record.userName,jdbcType=VARCHAR},
       TELEPHONE_ = #{record.telephone,jdbcType=VARCHAR},
       MAILBOX_ = #{record.mailbox,jdbcType=VARCHAR},
       USER_STATUS_ = #{record.userStatus,jdbcType=INTEGER},
        ACCOUNT_=#{record.account,jdbcType=INTEGER}
     where USER_ID_ = #{record.userId,jdbcType=BIGINT}-->
     update sys_users
     <set>
       <if test="userId != null">
         USER_ID_ = #{record.userId,jdbcType=INTEGER},
       </if>
       <if test="serName != null">
         USER_NAME_ = #{record.userName,jdbcType=VARCHAR},
       </if>
       <if test="telephone != null">
         TELEPHONE_ = #{record.telephone,jdbcType=VARCHAR},
       </if>
       <if test="mailbox != null">
         MAILBOX_ = #{record.mailbox,jdbcType=VARCHAR},
       </if>
       <if test="account != null">
         ACCOUNT_ = #{record.account,jdbcType=VARCHAR},
       </if>
       <if test="password != null">
         PASSWORD_ = #{record.password,jdbcType=VARCHAR},
       </if>
       <if test="userStatus != null">
         USER_STATUS_ = #{record.userStatus,jdbcType=INTEGER}
       </if>
     </set>
     where USER_ID_ = #{record.userId,jdbcType=BIGINT}
   </update>
   <!--登录-->
  <select id="login"  resultMap="BaseResultMap"  >
    select * from sys_users where   ACCOUNT_=#{account} and PASSWORD_=#{password}
  </select>
  <!--根据账户查询用户是否存在-->
  <select id="getByAccount"  resultMap="BaseResultMap"   >
     SELECT * FROM sys_users u LEFT OUTER JOIN sys_user_role ur ON u.USER_ID_=ur.USER_ID_
    LEFT OUTER JOIN sys_roles r ON r.ROLE_ID_=ur.ROLE_ID_
    LEFT OUTER JOIN sys_user_department ud ON u.USER_ID_=ud.USER_ID_
    LEFT OUTER JOIN sys_department d ON d.DEPT_ID_=ud.DEPT_ID_ where 1=1
    and u.ACCOUNT_=#{account}
  </select>
  <!-- 根据用户ID查询角色 -->
  <select id="findRoleByUid" resultMap="BaseResuMap"   >
    select * from sys_roles where  ROLE_ID_ in(select ROLE_ID_ from sys_user_role where USER_ID_=#{userId,jdbcType=INTEGER} )
  </select>
</mapper>